[project]
name = "site-backup"
version = "1.0.0"
description = "A tool to create backups of WordPress and HumHub instances"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "boto3",
    "coloredlogs",
    "python-dateutil",
    "humanfriendly",
    "PyMySQL",
    "phply",
    "dsnparse",
]

[project.scripts]
sitebackup = "sitebackup:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backup"]

[tool.uv]
dev-dependencies = [
    "pytest",
    "pytest-logging",
    "pytest-cov",
    "coverage[toml]",
    "mock",
    "ruff",
    "black>=25.1.0",
    "requests",
]

[tool.pytest.ini_options]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests (may require external services)",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = "-v --tb=short -m 'not integration' --cov=backup --cov=sitebackup --cov-report=term-missing --cov-report=html --cov-report=xml"
# Use: uv run pytest -m integration  to run integration tests

[tool.coverage.run]
source = ["backup", "sitebackup"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "venv/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
# Same line length as before
line-length = 100

# Python version
target-version = "py312"

# Exclude directories
exclude = [
    ".git",
    ".venv",
    ".vscode",
    "__pycache__",
    "htmlcov",
    ".pytest_cache",
]

[tool.ruff.lint]
# Enable rules equivalent to the flake8 setup
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "C90", # mccabe complexity
    "UP",  # pyupgrade compatibility
    "I",   # import errors
    "N",   # naming conventions
    "U",   # unused imports
    "B",   # bugbear compatibility
#    "D",   # docstring conventions
]

# Ignore rules to maintain compatibility with existing code
ignore = [
    "E203",  # whitespace before ':'
    "E266",  # too many leading '#' for block comment
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
# F401: imported but unused
"__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
# Same complexity as flake8 default
max-complexity = 10

[tool.ruff.lint.isort]
# Configure isort behavior
known-first-party = ["backup", "sitebackup"]
