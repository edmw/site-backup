[project]
dependencies = [
  "boto3",
  "coloredlogs",
  "python-dateutil",
  "humanfriendly",
  "PyMySQL",
  "phply",
  "dsnparse",
]
description = "A tool to create backups of WordPress and HumHub instances"
name = "site-backup"
readme = "README.md"
requires-python = ">=3.12"
version = "2.0.0b1"

[project.scripts]
sitebackup = "sitebackup:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["backup"]

[tool.hatch.build.targets.wheel.force-include]
"sitebackup.py" = "sitebackup.py"

[tool.uv]
dev-dependencies = [
  "pytest",
  "pytest-logging",
  "pytest-cov",
  "coverage[toml]",
  "mock",
  "ruff",
  "black>=25.1.0",
  "requests",
]

[tool.pytest.ini_options]
addopts = "-v --tb=short -m 'not integration' --cov=backup --cov=sitebackup --cov-report=term-missing --cov-report=html --cov-report=xml"
markers = [
  "unit: marks tests as unit tests",
  "integration: marks tests as integration tests (may require external services)",
]
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]
# Use: uv run pytest -m integration  to run integration tests

[tool.coverage.run]
omit = [
  "tests/*",
  "*/tests/*",
  "*/__pycache__/*",
  "venv/*",
  ".venv/*",
]
source = ["backup", "sitebackup"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
# Same line length as before
line-length = 100

# Python version
target-version = "py312"

# Exclude directories
exclude = [
  ".git",
  ".venv",
  ".vscode",
  "__pycache__",
  "htmlcov",
  ".pytest_cache",
]

[tool.ruff.lint]
# Enable rules equivalent to the flake8 setup
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings  
  "F", # pyflakes  
  "UP", # pyupgrade compatibility
  "I", # import errors
  "N", # naming conventions
  "U", # unused imports
  "B", # bugbear compatibility    
]
#  "D",  # docstring conventions
# "C90", # mccabe complexity

# Ignore rules to maintain compatibility with existing code
ignore = [
  "E203", # whitespace before ':'
  "E266", # too many leading '#' for block comment
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
# F401: imported but unused
"__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
# Same complexity as flake8 default
max-complexity = 10

[tool.ruff.lint.isort]
# Configure isort behavior
known-first-party = ["backup", "sitebackup"]
